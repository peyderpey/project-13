--
-- Migration: Add AI Analysis and Voice Profile Tables
--
-- This migration adds new tables to store the comprehensive analysis
-- and voice profiles generated by the Gemini AI service. It also
-- links this analysis to the main 'plays' table.
--

-- Step 1: Create the 'ai_script_analysis' table
-- This table will store the full analysis results from Gemini for a given script.
CREATE TABLE IF NOT EXISTS public.ai_script_analysis (
  analysis_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  play_id UUID REFERENCES public.plays(play_id) ON DELETE CASCADE NOT NULL,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  
  -- Core analysis data stored as JSONB for flexibility
  script_summary JSONB,
  character_analysis JSONB,
  scene_by_scene_analysis JSONB,
  themes JSONB,
  
  -- Metadata about the analysis process
  ai_model_used VARCHAR(100),
  confidence_score NUMERIC(5, 4),
  raw_ai_response JSONB,
  
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Add indexes for efficient querying
CREATE INDEX IF NOT EXISTS idx_ai_script_analysis_play_id ON public.ai_script_analysis(play_id);
CREATE INDEX IF NOT EXISTS idx_ai_script_analysis_user_id ON public.ai_script_analysis(user_id);


-- Step 2: Create the 'character_voice_profiles' table
-- This table stores detailed, AI-generated voice profiles and TTS prompts for each character.
-- This is an evolution of the previous schema, now more detailed.
CREATE TABLE IF NOT EXISTS public.character_voice_profiles (
    profile_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    character_id UUID REFERENCES public.characters(character_id) ON DELETE CASCADE NOT NULL,
    play_id UUID REFERENCES public.plays(play_id) ON DELETE CASCADE NOT NULL,
    
    -- Detailed voice attributes
    voice_description TEXT,
    gender VARCHAR(50),
    age_group VARCHAR(50),
    accent VARCHAR(100),
    emotion_profile JSONB, -- e.g., {"default": "calm", "angry": "forceful"}
    
    -- SSML and Gemini-specific prompts
    ssml_template TEXT, -- A template for generating SSML with placeholders
    gemini_tts_prompt TEXT, -- The prompt for Gemini's text-to-speech style control
    
    -- Recommended Google Cloud Voice from AI analysis
    recommended_google_voice JSONB,
    
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Add indexes for efficient querying
CREATE INDEX IF NOT EXISTS idx_character_voice_profiles_character_id ON public.character_voice_profiles(character_id);
CREATE INDEX IF NOT EXISTS idx_character_voice_profiles_play_id ON public.character_voice_profiles(play_id);


-- Step 3: Add a foreign key from 'plays' to the new analysis table
-- This allows us to easily link a play to its AI-generated analysis.
ALTER TABLE public.plays
ADD COLUMN IF NOT EXISTS analysis_id UUID REFERENCES public.ai_script_analysis(analysis_id) ON DELETE SET NULL;

-- Create a trigger to automatically update the 'updated_at' timestamp
CREATE OR REPLACE FUNCTION update_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_ai_script_analysis_updated_at
BEFORE UPDATE ON public.ai_script_analysis
FOR EACH ROW
EXECUTE FUNCTION update_timestamp();

CREATE TRIGGER trigger_update_character_voice_profiles_updated_at
BEFORE UPDATE ON public.character_voice_profiles
FOR EACH ROW
EXECUTE FUNCTION update_timestamp();

